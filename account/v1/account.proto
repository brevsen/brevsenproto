syntax = "proto3";

package account.v1;

import "common/v1/common.proto";


// GetAccount
// 自身のProfileを取得する
message GetAccountRequest {
}
message GetAccountResponse {
  common.v1.Account account = 1;
}

// GetAccountWithId
// アカウントIDを用いて指定するアカウントのProfileを取得する
message GetAccountWithIdRequest {
  string account_id = 1;
}
message GetAccountWithIdResponse {
  common.v1.Account account = 1;
}

// GenerateAccountLinkPath
// 有効期限を指定して追加用URLのPath部分を生成する(例: "brevsen://share/account/$random_string_here"の末尾部分)
message GenerateAccountLinkPathRequest {
  uint32 validity_days = 1;
}
message GenerateAccountLinkPathResponse {
  string link_path = 1;
}

// ResolveAccountLinkPath
// 追加用URLのPath部分から(例: "$random_string_here")アカウントIDを取得する
message ResolveAccountLinkPathRequest {
  string link_path = 1;
}
message ResolveAccountLinkPathResponse {
  string account_id = 1;
}

// DeleteAccount
// アカウントを削除する
message DeleteAccountRequest {
}
message DeleteAccountResponse {
}

// AddFriendWithId
// AccountIdを用いて友達追加する
message AddFriendWithIdRequest {
  string account_id = 1;
}
message AddFriendWithIdResponse {
}

// SendMessage
// メッセージを送信する
message SendMessageRequest {
  string destination = 1; // user_id or group_id
  common.v1.MessageType message_type = 2;
  string text = 3; // "hello!", "[IMAGE]", "[VIDEO]", "[GIF]", ...
}
message SendMessageResponse {
  common.v1.Message message = 1;
}


service AccountService {
  rpc GetAccount (GetAccountRequest) returns (GetAccountResponse);
  rpc GetAccountWithId (GetAccountWithIdRequest) returns (GetAccountWithIdResponse);
  rpc GenerateAccountLinkPath (GenerateAccountLinkPathRequest) returns (GenerateAccountLinkPathResponse);
  rpc ResolveAccountLinkPath (ResolveAccountLinkPathRequest) returns (ResolveAccountLinkPathResponse);
  rpc DeleteAccount (DeleteAccountRequest) returns (DeleteAccountResponse);
  rpc AddFriendWithId (AddFriendWithIdRequest) returns (AddFriendWithIdResponse);
  rpc SendMessage (SendMessageRequest) returns (SendMessageResponse);
}